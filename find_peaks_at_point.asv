function [vals, locs_peaks, widths, prominences, peak_threshold, z, raw] = find_peaks_at_point(x, y, gWide, display)
        arguments
            x,
        end
        if nargin < 4 % Don't need to include display if not necessary
            display = false;
        end
        % Previously 32%
        peak_perc_threshold = 5;
        diff_peak_distance = 0.02e9;
        % min_peak_prominence = 10;
        num_max_peaks = 2;
        raw = squeeze(gWide.signal(x, y, :));
        % z = sgolayfilt(z, 7, 41);
        z = smooth(raw, 41, 'sgolay', 7);
        peak_threshold = prctile(z, peak_perc_threshold);
        % offset = min(-z); % Lowest point in flipped version
        [vals, locs_peaks, widths, prominences] = findpeaks(-z+peak_threshold, gWide.SweepParam, ...
                            'SortStr','descend',...
                            'WidthReference','halfheight', ...
                            'NPeaks', num_max_peaks, ...,
                            'MinPeakDistance', diff_peak_distance);
        vals = -vals + peak_threshold;
        if display
            figure
            hold on
            yline(peak_threshold, 'Color', 'r')
            plot(gWide.SweepParam, z, 'Color', 'b')
            plot(locs_peaks, vals, 'rv', 'MarkerFaceColor', 'g');
            title("Point at " + x + ", " + y)
            disp(x + " " + y + " completed");
        end
end
